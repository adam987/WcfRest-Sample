//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestClient.WcfRest {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/WcfRest")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfRest.IRestService")]
    public interface IRestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetMainPage", ReplyAction="http://tempuri.org/IRestService/GetMainPageResponse")]
        string GetMainPage();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetMainPage", ReplyAction="http://tempuri.org/IRestService/GetMainPageResponse")]
        System.Threading.Tasks.Task<string> GetMainPageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetUserName", ReplyAction="http://tempuri.org/IRestService/GetUserNameResponse")]
        string GetUserName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetUserName", ReplyAction="http://tempuri.org/IRestService/GetUserNameResponse")]
        System.Threading.Tasks.Task<string> GetUserNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/PutUserName", ReplyAction="http://tempuri.org/IRestService/PutUserNameResponse")]
        void PutUserName(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/PutUserName", ReplyAction="http://tempuri.org/IRestService/PutUserNameResponse")]
        System.Threading.Tasks.Task PutUserNameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAccounts", ReplyAction="http://tempuri.org/IRestService/GetAccountsResponse")]
        RestClient.WcfRest.Account[] GetAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAccounts", ReplyAction="http://tempuri.org/IRestService/GetAccountsResponse")]
        System.Threading.Tasks.Task<RestClient.WcfRest.Account[]> GetAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAccount", ReplyAction="http://tempuri.org/IRestService/GetAccountResponse")]
        RestClient.WcfRest.Account GetAccount(string stringGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/GetAccount", ReplyAction="http://tempuri.org/IRestService/GetAccountResponse")]
        System.Threading.Tasks.Task<RestClient.WcfRest.Account> GetAccountAsync(string stringGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/PostAccount", ReplyAction="http://tempuri.org/IRestService/PostAccountResponse")]
        void PostAccount(RestClient.WcfRest.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/PostAccount", ReplyAction="http://tempuri.org/IRestService/PostAccountResponse")]
        System.Threading.Tasks.Task PostAccountAsync(RestClient.WcfRest.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/PutAccount", ReplyAction="http://tempuri.org/IRestService/PutAccountResponse")]
        void PutAccount(string stringGuid, RestClient.WcfRest.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRestService/PutAccount", ReplyAction="http://tempuri.org/IRestService/PutAccountResponse")]
        System.Threading.Tasks.Task PutAccountAsync(string stringGuid, RestClient.WcfRest.Account account);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRestServiceChannel : RestClient.WcfRest.IRestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RestServiceClient : System.ServiceModel.ClientBase<RestClient.WcfRest.IRestService>, RestClient.WcfRest.IRestService {
        
        public RestServiceClient() {
        }
        
        public RestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetMainPage() {
            return base.Channel.GetMainPage();
        }
        
        public System.Threading.Tasks.Task<string> GetMainPageAsync() {
            return base.Channel.GetMainPageAsync();
        }
        
        public string GetUserName() {
            return base.Channel.GetUserName();
        }
        
        public System.Threading.Tasks.Task<string> GetUserNameAsync() {
            return base.Channel.GetUserNameAsync();
        }
        
        public void PutUserName(string username) {
            base.Channel.PutUserName(username);
        }
        
        public System.Threading.Tasks.Task PutUserNameAsync(string username) {
            return base.Channel.PutUserNameAsync(username);
        }
        
        public RestClient.WcfRest.Account[] GetAccounts() {
            return base.Channel.GetAccounts();
        }
        
        public System.Threading.Tasks.Task<RestClient.WcfRest.Account[]> GetAccountsAsync() {
            return base.Channel.GetAccountsAsync();
        }
        
        public RestClient.WcfRest.Account GetAccount(string stringGuid) {
            return base.Channel.GetAccount(stringGuid);
        }
        
        public System.Threading.Tasks.Task<RestClient.WcfRest.Account> GetAccountAsync(string stringGuid) {
            return base.Channel.GetAccountAsync(stringGuid);
        }
        
        public void PostAccount(RestClient.WcfRest.Account account) {
            base.Channel.PostAccount(account);
        }
        
        public System.Threading.Tasks.Task PostAccountAsync(RestClient.WcfRest.Account account) {
            return base.Channel.PostAccountAsync(account);
        }
        
        public void PutAccount(string stringGuid, RestClient.WcfRest.Account account) {
            base.Channel.PutAccount(stringGuid, account);
        }
        
        public System.Threading.Tasks.Task PutAccountAsync(string stringGuid, RestClient.WcfRest.Account account) {
            return base.Channel.PutAccountAsync(stringGuid, account);
        }
    }
}
